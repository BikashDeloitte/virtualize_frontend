stages:
  - build_angular
  - cloud_deploy

cache:
    paths:
    - ./node_modules

generate_artifact:
 image: node:12-alpine
 stage: build_angular
 only:
 - master
 - dev
 - ci-cd-test
 tags:
  - visualize_frontend
 script:
  - npm install -g @angular/cli
  - npm install
  - CI=false npm run build
 artifacts:
  paths:
    - dist/
 when: manual
 
gcloud_deploy:
  image: google/cloud-sdk:alpine
  stage: cloud_deploy
  dependencies:
    - generate_artifact
  environment: staging
  only:
  - master
  tags:
  - visualize_frontend
  before_script:    
  - "Servicename=visualize"
  - "echo $Servicename"
  - "ServiceName=${Servicename//-}"
  - "echo $ServiceName"
  - "echo $CI_PROJECT_NAME"
  - |
    cat <<EOF >> app.yaml
    runtime: python27
    api_version: 1
    threadsafe: true
    skip_files:
     - (?!^dist)
    handlers:
     - url: /(.*\.(js|css|svg|png)(|\.map))$
    static_files: dist/\1
     upload: dist/(.*)(|\.map)
     - url: /.*
    static_files: dist/index.html
     upload: dist/.*
    EOF
  - "cat app.yaml"
  - echo $GCP_SERVICE_CRED > ${CI_PIPELINE_ID}.json
  script:
  - gcloud auth activate-service-account --key-file $CI_PIPELINE_ID.json
  - gcloud --project hu18-groupa-java app deploy --version v1 --appyaml app.yaml
  - url=$(gcloud app services browse $ServiceName --no-launch-browser --project hu18-groupa-java)
  - echo $url
  after_script:
  - rm $CI_PIPELINE_ID.json
  when: manual
